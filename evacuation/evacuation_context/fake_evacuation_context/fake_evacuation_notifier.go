// This file was generated by counterfeiter
package fake_evacuation_context

import (
	"sync"

	"github.com/cloudfoundry-incubator/rep/evacuation/evacuation_context"
)

type FakeEvacuationNotifier struct {
	EvacuateNotifyStub        func() <-chan struct{}
	evacuateNotifyMutex       sync.RWMutex
	evacuateNotifyArgsForCall []struct{}
	evacuateNotifyReturns     struct {
		result1 <-chan struct{}
	}
}

func (fake *FakeEvacuationNotifier) EvacuateNotify() <-chan struct{} {
	fake.evacuateNotifyMutex.Lock()
	fake.evacuateNotifyArgsForCall = append(fake.evacuateNotifyArgsForCall, struct{}{})
	fake.evacuateNotifyMutex.Unlock()
	if fake.EvacuateNotifyStub != nil {
		return fake.EvacuateNotifyStub()
	} else {
		return fake.evacuateNotifyReturns.result1
	}
}

func (fake *FakeEvacuationNotifier) EvacuateNotifyCallCount() int {
	fake.evacuateNotifyMutex.RLock()
	defer fake.evacuateNotifyMutex.RUnlock()
	return len(fake.evacuateNotifyArgsForCall)
}

func (fake *FakeEvacuationNotifier) EvacuateNotifyReturns(result1 <-chan struct{}) {
	fake.EvacuateNotifyStub = nil
	fake.evacuateNotifyReturns = struct {
		result1 <-chan struct{}
	}{result1}
}

var _ evacuation_context.EvacuationNotifier = new(FakeEvacuationNotifier)
