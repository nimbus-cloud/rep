// This file was generated by counterfeiter
package repfakes

import (
	"sync"

	"code.cloudfoundry.org/rep"
)

type FakeClientFactory struct {
	CreateClientStub        func(address string) rep.Client
	createClientMutex       sync.RWMutex
	createClientArgsForCall []struct {
		address string
	}
	createClientReturns struct {
		result1 rep.Client
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeClientFactory) CreateClient(address string) rep.Client {
	fake.createClientMutex.Lock()
	fake.createClientArgsForCall = append(fake.createClientArgsForCall, struct {
		address string
	}{address})
	fake.recordInvocation("CreateClient", []interface{}{address})
	fake.createClientMutex.Unlock()
	if fake.CreateClientStub != nil {
		return fake.CreateClientStub(address)
	} else {
		return fake.createClientReturns.result1
	}
}

func (fake *FakeClientFactory) CreateClientCallCount() int {
	fake.createClientMutex.RLock()
	defer fake.createClientMutex.RUnlock()
	return len(fake.createClientArgsForCall)
}

func (fake *FakeClientFactory) CreateClientArgsForCall(i int) string {
	fake.createClientMutex.RLock()
	defer fake.createClientMutex.RUnlock()
	return fake.createClientArgsForCall[i].address
}

func (fake *FakeClientFactory) CreateClientReturns(result1 rep.Client) {
	fake.CreateClientStub = nil
	fake.createClientReturns = struct {
		result1 rep.Client
	}{result1}
}

func (fake *FakeClientFactory) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.createClientMutex.RLock()
	defer fake.createClientMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeClientFactory) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ rep.ClientFactory = new(FakeClientFactory)
